package DynamicProgramming;
import java.util.*;
public class Buy_sell_stock_2_transaction {

	
	public int maxProfit(List <Integer> a)
	{
		
		if(a.isEmpty()||a.size()==1)
			return 0;
		int []A=new int[a.size()-1];
		int []B=new int[a.size()-1];
		int []s=new int[A.length];
		int []e=new int [A.length];
		int temp2;
	
		ListIterator<Integer> iter = a.listIterator();
		int temp1=iter.next();
		for(int i=0; iter.hasNext();i++)
		{
			temp2=iter.next();
			B[i]=temp2-temp1;
			temp1=temp2;
			
		}
		A[0]=B[0]>0?B[0]:0;
		for(int i=1;i<B.length;i++)
		{
			A[i]=A[i-1]+B[i];
			if(A[i]<=0)
				A[i]=0;
		}
		
		s[0]=A[0];
		for(int i=1;i<A.length;i++)
		{
			s[i]=Math.max(s[i-1],A[i]);
			
		}
		e[A.length-1]=A[A.length-1];
		for(int j=A.length-2;j>=0;j--)
		{
			e[j]=Math.max(e[j+1],A[j]);
		}
		int sum12=0;
		for(int i=0;i<A.length-2;i++)
		{
			sum12=Math.max(sum12,s[i]+e[i+1]-A[i+1]);
		}
		
	return sum12;
		
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Buy_sell_stock_2_transaction ob1=new Buy_sell_stock_2_transaction();
		List <Integer> l=new ArrayList<Integer>();
		int A[]={ 8182929, 79253, 7848996, 2702749, 5422473, 772725, 8788130, 1696102, 3131663, 9918309, 3951967, 5511768, 2560346, 7464294, 9583620, 9381444, 9697617, 6691643, 3911565, 4075295, 5344582, 8337819, 3787770, 5859454, 4410888, 5403126, 328539, 3429164, 1993135, 1226583, 1805519, 1028291, 9652757, 9138424, 5304666, 7647727, 306890, 913049, 9815762, 4576533, 7224729, 7377499, 8211412, 3243523, 6916245, 8698392, 4366341, 6732381, 2597272, 7158640, 33008, 7349970, 2210554, 5055465, 8836561, 7719859, 2567681, 3530468, 925797, 4101985, 1989398, 7357296, 7026539, 9671063, 6126126, 8164711, 3589, 3021327, 6784711, 4894336, 6623078, 5757380, 9510331, 6195703, 5463820, 3377390, 759286, 7369416, 8204402, 2252908, 8912484, 5120404, 2255416, 9075244, 6968175, 742993, 7627423, 5380490, 628146, 5620340, 4057207, 9915567, 3060535, 5894162, 5495503, 4620758, 2883747, 181178, 8820887, 5029788, 4938361, 1419433, 4593447, 4880911, 2652820, 2325256, 2605732, 6466783, 4015103, 972509, 3757468, 6279297, 127154, 1551821, 6102289, 6677030, 8372511, 4031922, 7001024, 6985341, 4205619, 8983440, 8150324, 2179294, 7416015, 3916673, 7611148, 1312433, 2721353, 1335038, 1452402, 5824312, 7462849, 7255696, 4310153, 5615928, 8572922, 3277967, 8757170, 9779961, 9866900, 2118844, 6239609, 1673364, 439976, 5577206, 4893270, 3575072, 8651182, 5776205, 7473548, 6214509, 2186830, 6295628, 1993455, 9754160, 4007462, 6822719, 2325527, 6092505, 101116, 2808052, 614838, 234282, 1634219, 9000365, 9999982, 9471612, 1823651, 7559704, 7436033, 5994461, 6640478, 7186056, 6038035, 5366739, 4469199, 9383386, 3760837, 1864759, 6736484, 8026724, 9199007, 4351698, 3297905, 5929732, 3669756, 7358830, 525182, 599199, 8248898, 2914556, 3414229, 5369540, 9323528, 195659, 655775, 1792035, 4200453, 7978224, 9228726, 4366257, 5173543, 4287793, 8185143, 3434788, 1763880, 23712, 9239363, 533509, 7076241 };
		for(int i=0;i<A.length;i++)
		{
			l.add(A[i]);
		}
		System.out.println(ob1.maxProfit(l));
		
		
		
	}

}
